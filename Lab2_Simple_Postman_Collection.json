{
  "info": {
    "name": "LAB02 – FastAPI (prosty middleware + CRUD)",
    "_postman_id": "lab2-simple-col",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "A — Middleware i zdrowie",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.environment.set('ts', Date.now());"
            ]
          }
        }
      ],
      "item": [
        {
          "name": "A1 GET /health (X-Process-Time)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('200 OK',()=>pm.response.to.have.status(200));",
                  "pm.test('X-Process-Time',()=>pm.expect(pm.response.headers.get('X-Process-Time')).to.be.a('string'));"
                ]
              }
            }
          ]
        },
        {
          "name": "A2 GET /admin/secret bez klucza -> 401",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/secret"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('401',()=>pm.response.to.have.status(401));"
                ]
              }
            }
          ]
        },
        {
          "name": "A3 GET /admin/secret z kluczem -> 200",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-API-Key",
                "value": "{{apiKey}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/secret"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('200',()=>pm.response.to.have.status(200));"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "B — CRUD /items",
      "item": [
        {
          "name": "B1 GET /items",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/items"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('200',()=>pm.response.to.have.status(200));",
                  "pm.test('Array',()=>pm.expect(Array.isArray(pm.response.json())).to.be.true);"
                ]
              }
            }
          ]
        },
        {
          "name": "B2 POST /items (create)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Produkt-{{ts}}\",\n  \"price\": 10.5,\n  \"tags\": [\n    \"lab\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/items"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('201',()=>pm.response.to.have.status(201));",
                  "const it = pm.response.json(); pm.environment.set('itemId', it.id);",
                  "pm.test('ma id',()=>pm.expect(it).to.have.property('id'));"
                ]
              }
            }
          ]
        },
        {
          "name": "B3 GET /items/{{itemId}}",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/items/{{itemId}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('200',()=>pm.response.to.have.status(200));",
                  "pm.test('id zgodny',()=>pm.expect(pm.response.json().id).to.eql(parseInt(pm.environment.get('itemId'))));"
                ]
              }
            }
          ]
        },
        {
          "name": "B4 PUT /items/{{itemId}}",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Zmieniony-{{ts}}\",\n  \"price\": 20.0,\n  \"tags\": [\n    \"lab\",\n    \"edit\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/items/{{itemId}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('200',()=>pm.response.to.have.status(200));",
                  "pm.test('nazwa zaktualizowana',()=>pm.expect(pm.response.json().name).to.include('Zmieniony-'));"
                ]
              }
            }
          ]
        },
        {
          "name": "B5 DELETE /items/{{itemId}}",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/items/{{itemId}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('204',()=>pm.response.to.have.status(204));"
                ]
              }
            }
          ]
        },
        {
          "name": "B6 GET /items/{{itemId}} (404) – opcjonalne",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/items/{{itemId}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('404',()=>pm.response.to.have.status(404));"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}